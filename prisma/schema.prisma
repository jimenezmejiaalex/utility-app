// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  bankAccount   BankAccount[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Currency {
  USD
  CRC
}

model BankAccount {
  id        String   @id @default(cuid())
  accountId Int      @unique @default(autoincrement())
  name      String?
  currency  Currency @default(USD)
  amount    Decimal
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Budget    Budget?  @relation(fields: [budgetId], references: [id])
  budgetId  String?
}

model Budget {
  id         String        @id @default(cuid())
  budgetId   Int           @unique @default(autoincrement())
  name       String
  amount     Decimal
  durationId String
  duration   Duration      @relation(fields: [durationId], references: [id])
  accounts   BankAccount[]
  categories Category[]
}

model Category {
  id         String   @id @default(cuid())
  categoryId Int      @unique @default(autoincrement())
  name       String
  type       Type
  budgets    Budget[]
}

enum Type {
  Income
  Expense
}

model Duration {
  id        String   @id @default(cuid())
  createdAt DateTime
  finishAt  DateTime
  budgets   Budget[]
}
